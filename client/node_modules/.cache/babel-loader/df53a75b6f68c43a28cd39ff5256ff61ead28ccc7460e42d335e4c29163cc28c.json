{"ast":null,"code":"var _jsxFileName = \"/Users/oguidomingos/Documents/arbitrage/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ArbitrageTable from './components/ArbitrageTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [opportunities, setOpportunities] = useState([]);\n  useEffect(() => {\n    const fetchOpportunities = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/opportunities');\n        setOpportunities(response.data);\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n    fetchOpportunities();\n    const intervalId = setInterval(fetchOpportunities, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Arbitrage Opportunities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArbitrageTable, {\n      opportunities: opportunities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S0LOyc57CCC2dxjZDh6kroM5jGw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ArbitrageTable","jsxDEV","_jsxDEV","App","_s","opportunities","setOpportunities","fetchOpportunities","response","get","data","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oguidomingos/Documents/arbitrage/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ArbitrageOpportunity } from './types';\nimport ArbitrageTable from './components/ArbitrageTable';\n\nfunction App() {\n  const [opportunities, setOpportunities] = useState<ArbitrageOpportunity[]>([]);\n\n  useEffect(() => {\n    const fetchOpportunities = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/opportunities');\n        setOpportunities(response.data);\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n\n    fetchOpportunities();\n    const intervalId = setInterval(fetchOpportunities, 5000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Arbitrage Opportunities</h1>\n      <ArbitrageTable opportunities={opportunities} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAyB,EAAE,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,yCAAyC,CAAC;QAC3EH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDJ,kBAAkB,CAAC,CAAC;IACpB,MAAMM,UAAU,GAAGC,WAAW,CAACP,kBAAkB,EAAE,IAAI,CAAC;IAExD,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpEnB,OAAA,CAACF,cAAc;MAACK,aAAa,EAAEA;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACjB,EAAA,CAzBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}