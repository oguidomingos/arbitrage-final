{"ast":null,"code":"var _jsxFileName = \"/Users/oguidomingos/Documents/arbitrage/client/src/components/ArbitrageLogs.tsx\";\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArbitrageLogs({\n  logs\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-3 border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-medium text-gray-900\",\n        children: \"Logs de Arbitragem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-auto max-h-96\",\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `px-4 py-3 border-b border-gray-100 ${log.type === 'error' ? 'bg-red-50' : log.type === 'success' ? 'bg-green-50' : 'bg-white'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: format(new Date(log.timestamp), \"HH:mm:ss\", {\n                  locale: ptBR\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `ml-2 px-2 py-0.5 rounded-full text-xs ${log.type === 'error' ? 'bg-red-100 text-red-800' : log.type === 'success' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'}`,\n                children: log.type === 'error' ? 'Erro' : log.type === 'success' ? 'Sucesso' : 'Info'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-900\",\n              children: log.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), log.details && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-gray-600 space-y-1\",\n              children: [log.details.route && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Rota: \", log.details.route]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), log.details.profit !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `font-medium ${log.details.profit > 0 ? 'text-green-600' : 'text-red-600'}`,\n                children: [\"Lucro: $\", log.details.profit.toFixed(6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this), log.details.dex1 && log.details.dex2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"DEXs: \", log.details.dex1, \" \\u2192 \", log.details.dex2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ArbitrageLogs;\nexport default ArbitrageLogs;\nvar _c;\n$RefreshReg$(_c, \"ArbitrageLogs\");","map":{"version":3,"names":["React","format","ptBR","jsxDEV","_jsxDEV","ArbitrageLogs","logs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","type","Date","timestamp","locale","message","details","route","profit","undefined","toFixed","dex1","dex2","_c","$RefreshReg$"],"sources":["/Users/oguidomingos/Documents/arbitrage/client/src/components/ArbitrageLogs.tsx"],"sourcesContent":["import React from 'react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\ninterface LogEntry {\n  timestamp: number;\n  message: string;\n  type: 'info' | 'success' | 'error';\n  details?: {\n    route?: string;\n    profit?: number;\n    dex1?: string;\n    dex2?: string;\n  };\n}\n\ninterface ArbitrageLogsProps {\n  logs: LogEntry[];\n}\n\nfunction ArbitrageLogs({ logs }: ArbitrageLogsProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow mt-6\">\n      <div className=\"px-4 py-3 border-b border-gray-200\">\n        <h2 className=\"text-lg font-medium text-gray-900\">Logs de Arbitragem</h2>\n      </div>\n      <div className=\"overflow-y-auto max-h-96\">\n        {logs.map((log, index) => (\n          <div\n            key={index}\n            className={`px-4 py-3 border-b border-gray-100 ${\n              log.type === 'error' ? 'bg-red-50' :\n              log.type === 'success' ? 'bg-green-50' : 'bg-white'\n            }`}\n          >\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm text-gray-500\">\n                    {format(new Date(log.timestamp), \"HH:mm:ss\", { locale: ptBR })}\n                  </span>\n                  <span className={`ml-2 px-2 py-0.5 rounded-full text-xs ${\n                    log.type === 'error' ? 'bg-red-100 text-red-800' :\n                    log.type === 'success' ? 'bg-green-100 text-green-800' :\n                    'bg-blue-100 text-blue-800'\n                  }`}>\n                    {log.type === 'error' ? 'Erro' :\n                     log.type === 'success' ? 'Sucesso' : 'Info'}\n                  </span>\n                </div>\n                <p className=\"mt-1 text-sm text-gray-900\">{log.message}</p>\n                {log.details && (\n                  <div className=\"mt-2 text-xs text-gray-600 space-y-1\">\n                    {log.details.route && (\n                      <div>Rota: {log.details.route}</div>\n                    )}\n                    {log.details.profit !== undefined && (\n                      <div className={`font-medium ${\n                        log.details.profit > 0 ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        Lucro: ${log.details.profit.toFixed(6)}\n                      </div>\n                    )}\n                    {log.details.dex1 && log.details.dex2 && (\n                      <div>DEXs: {log.details.dex1} â†’ {log.details.dex2}</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ArbitrageLogs;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBvC,SAASC,aAAaA,CAAC;EAAEC;AAAyB,CAAC,EAAE;EACnD,oBACEF,OAAA;IAAKG,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CJ,OAAA;MAAKG,SAAS,EAAC,oCAAoC;MAAAC,QAAA,eACjDJ,OAAA;QAAIG,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACNR,OAAA;MAAKG,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACtCF,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBX,OAAA;QAEEG,SAAS,EAAE,sCACTO,GAAG,CAACE,IAAI,KAAK,OAAO,GAAG,WAAW,GAClCF,GAAG,CAACE,IAAI,KAAK,SAAS,GAAG,aAAa,GAAG,UAAU,EAClD;QAAAR,QAAA,eAEHJ,OAAA;UAAKG,SAAS,EAAC,kCAAkC;UAAAC,QAAA,eAC/CJ,OAAA;YAAKG,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACrBJ,OAAA;cAAKG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCJ,OAAA;gBAAMG,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EACpCP,MAAM,CAAC,IAAIgB,IAAI,CAACH,GAAG,CAACI,SAAS,CAAC,EAAE,UAAU,EAAE;kBAAEC,MAAM,EAAEjB;gBAAK,CAAC;cAAC;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eACPR,OAAA;gBAAMG,SAAS,EAAE,yCACfO,GAAG,CAACE,IAAI,KAAK,OAAO,GAAG,yBAAyB,GAChDF,GAAG,CAACE,IAAI,KAAK,SAAS,GAAG,6BAA6B,GACtD,2BAA2B,EAC1B;gBAAAR,QAAA,EACAM,GAAG,CAACE,IAAI,KAAK,OAAO,GAAG,MAAM,GAC7BF,GAAG,CAACE,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG;cAAM;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNR,OAAA;cAAGG,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAEM,GAAG,CAACM;YAAO;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC1DE,GAAG,CAACO,OAAO,iBACVjB,OAAA;cAAKG,SAAS,EAAC,sCAAsC;cAAAC,QAAA,GAClDM,GAAG,CAACO,OAAO,CAACC,KAAK,iBAChBlB,OAAA;gBAAAI,QAAA,GAAK,QAAM,EAACM,GAAG,CAACO,OAAO,CAACC,KAAK;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACpC,EACAE,GAAG,CAACO,OAAO,CAACE,MAAM,KAAKC,SAAS,iBAC/BpB,OAAA;gBAAKG,SAAS,EAAE,eACdO,GAAG,CAACO,OAAO,CAACE,MAAM,GAAG,CAAC,GAAG,gBAAgB,GAAG,cAAc,EACzD;gBAAAf,QAAA,GAAC,UACM,EAACM,GAAG,CAACO,OAAO,CAACE,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CACN,EACAE,GAAG,CAACO,OAAO,CAACK,IAAI,IAAIZ,GAAG,CAACO,OAAO,CAACM,IAAI,iBACnCvB,OAAA;gBAAAI,QAAA,GAAK,QAAM,EAACM,GAAG,CAACO,OAAO,CAACK,IAAI,EAAC,UAAG,EAACZ,GAAG,CAACO,OAAO,CAACM,IAAI;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACxD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAxCDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyCP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACgB,EAAA,GAvDQvB,aAAa;AAyDtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}